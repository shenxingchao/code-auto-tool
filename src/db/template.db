{"title":"electron+vue3+nedb添加模板","base_content":"<template>\n  <div class=\"app-container\">\n    <el-row class=\"tool-btn-group\" type=\"flex\" justify=\"start\">\n      <el-breadcrumb separator=\"/\">\n        <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\n        <el-breadcrumb-item :to=\"{ path: '/Template/TemplateList' }\">模板管理</el-breadcrumb-item>\n        <el-breadcrumb-item>添加模板</el-breadcrumb-item>\n      </el-breadcrumb>\n      <svg-icon name=\"back\" className=\"icon\" @click=\"router.back()\" />\n    </el-row>\n    <el-row type=\"flex\" justify=\"center\">\n      <el-col :md=\"18\">\n        <el-form ref=\"ruleFormRef\" :rules=\"rules\" :model=\"ruleForm\" label-position=\"right\" label-width=\"150px\"\n                 @submit.prevent>\n          {$content}\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"submitForm()\">确定</el-button>\n            <el-button @click=\"resetForm()\">重置</el-button>\n          </el-form-item>\n        </el-form>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, reactive, ref, getCurrentInstance } from 'vue'\nimport { useRouter } from 'vue-router'\n//数据类型\ninterface RuleForm {\n  {$for1}add_time: number\n}\n\nexport default defineComponent({\n  name: 'AddTemplate',\n  setup() {\n    //定义router\n    const router = useRouter()\n\n    //当前组件实例\n    const internalInstance = getCurrentInstance()\n\n    //访问 globalProperties\n    const global: any = internalInstance?.appContext.config.globalProperties\n    //db实例\n    const db = global.$db\n\n    //静态变量\n    const rules = {\n      {$for2}\n    }\n\n    //数据对象\n    const ruleForm: RuleForm = reactive({\n      {$for3}add_time: global.$moment().format('x'),\n    })\n\n    //表单refs dom对象\n    const ruleFormRef: any = ref(null)\n\n    //提交表单\n    const submitForm = () => {\n      ruleFormRef.value.validate(async (valid: any) => {\n        if (valid) {\n            //新增一条记录到数据库\n            await db.template\n              .insert(ruleForm)\n              .then((res: any) => {\n                global.$message.success({\n                  message: '添加成功',\n                })\n                router.back()\n              })\n              .catch((err: any) => {})\n        } else {\n          return false\n        }\n      })\n    }\n\n    //重置表单\n    const resetForm = () => {\n      ruleFormRef.value.resetFields()\n    }\n\n    return { router, rules, ruleForm, ruleFormRef, submitForm, resetForm }\n  },\n})\n</script>\n","add_time":"1615774405275","_id":"2UlGUVRStySXsUwX"}
